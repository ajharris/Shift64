// Copyright (c) Robarts Research Institute 2006

//---------------------------------------------------------------------
// Observer.h : interface of the Observer class
//---------------------------------------------------------------------
// Purpose: Implementation of the Observer Pattern (GoF)
//---------------------------------------------------------------------

#ifndef _OBSERVER
#define _OBSERVER

//---------------------------------------------------------------------
// Forward declare the class Observable
//---------------------------------------------------------------------

class Observable;

//---------------------------------------------------------------------
// Class declaration for Observer
//---------------------------------------------------------------------
class Observer
{
	//-----------------------------------------------------------------
	// Destructor
	//-----------------------------------------------------------------
	public :
		virtual ~Observer();

	//-----------------------------------------------------------------
	// Methods
	//-----------------------------------------------------------------
	public :
		virtual bool Update( Observable* ) = 0; // called by Observable when something of interest has changed

	//-----------------------------------------------------------------
	// Protected constructor
	//-----------------------------------------------------------------
	protected :
		Observer();
};

//---------------------------------------------------------------------

#endif
